---
# NOTE: Authelia vars should be escaped with $${VAR_NAME} to avoid interpolation by Flux
authentication_backend:
  ldap:
    address: ldap://glauth.security.svc.cluster.local:389
    implementation: custom
    timeout: 5s
    start_tls: false
    base_dn: dc=home,dc=lan
    additional_users_dn: ou=family,ou=users
    users_filter: (&({username_attribute}={input})(objectClass=posixAccount))
    additional_groups_dn: ou=users
    groups_filter: (&(uniqueMember={dn})(objectClass=posixGroup))
    user: cn=search,ou=svcaccts,ou=users,dc=home,dc=lan
    attributes:
      username: uid
      display_name: givenName
      group_name: ou
      mail: mail
      member_of: memberOf
  password_reset:
    disable: true
  refresh_interval: 1m

session:
  same_site: lax
  inactivity: 5m
  expiration: 1h
  remember_me: 1M
  cookies:
    - name: mainks_session
      domain: ${SECRET_DOMAIN}
      authelia_url: https://auth.${SECRET_DOMAIN}
      default_redirection_url: https://${SECRET_DOMAIN}
  redis:
    host: redis-node-0.redis-headless.database.svc.cluster.local
    database_index: 2

notifier:
  disable_startup_check: true
  smtp:
    address: ${ROUTER_IP}
    sender: Authelia <admin@${SECRET_DOMAIN}>
    disable_require_tls: true

duo_api:
  disable: true

access_control:
  default_policy: two_factor
  networks:
    - name: internal
      networks: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
  rules:
    - domain: auth.${SECRET_DOMAIN}
      policy: bypass
    - domain:
        - audiobookshelf.${SECRET_DOMAIN}
        - lidarr.${SECRET_DOMAIN}
        - prowlarr.${SECRET_DOMAIN}
        - radarr.${SECRET_DOMAIN}
        - readarr-audio.${SECRET_DOMAIN}
        - readarr.${SECRET_DOMAIN}
        - sabnzbd.${SECRET_DOMAIN}
        - sonarr.${SECRET_DOMAIN}
      resources:
        - "^/api/.*$"
        - "^/ping*$"
      policy: bypass
    - domain:
        - sabnzbd.${SECRET_DOMAIN}
      resources:
        - "^/api/.*$"
      policy: bypass
    - domain:
        - qb.${SECRET_DOMAIN}
      resources:
        - "^/api/v2/.*$"
      policy: bypass
    - domain:
        - frigate.${SECRET_DOMAIN}
      resources:
        - "^/api/version$"
      policy: bypass

identity_providers:
  oidc:
    jwks:
      - key: |
          {{ secret "/config/secrets/OIDC_JWKS_KEY" | mindent 10 "|" | msquote }}
    cors:
      endpoints: ["authorization", "token", "revocation", "introspection"]
    clients:
      - client_name: Grafana
        client_id: grafana
        client_secret: "$${GRAFANA_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris:
          - https://grafana.${SECRET_DOMAIN}/login/generic_oauth
        userinfo_signed_response_alg: none
      # - client_name: Mealie
      #   client_id: mealie
      #   #public: true
      #   authorization_policy: two_factor
      #   require_pkce: true
      #   pkce_challenge_method: S256
      #   scopes: ["openid", "profile", "groups", "email"]
      #   redirect_uris:
      #     - https://mealie.${SECRET_DOMAIN}/login/
      #   userinfo_signed_response_alg: none
      #   #token_endpoint_auth_method: none
      #   client_secret: "$${MEALIE_OAUTH_CLIENT_SECRET}"
      # - client_name: Paperless
      #   client_id: paperless
      #   client_secret: "$${PAPERLESS_OAUTH_CLIENT_SECRET}"
      #   public: false
      #   authorization_policy: two_factor
      #   scopes: ["openid", "profile", "groups", "email"]
      #   redirect_uris:
      #     - https://paperless.${SECRET_DOMAIN}/accounts/oidc/authelia/login/callback/
      #   userinfo_signed_response_alg: none
